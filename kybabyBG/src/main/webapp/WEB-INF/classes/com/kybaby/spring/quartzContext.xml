<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
 	<!-- 上门服务订单定时任务 -->
    <bean id="methodInvokingJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="orderInfoBo" />
       <property name="targetMethod" value="orderPromptTask" />
       <property name="concurrent" value="false" />
    </bean>
    <!-- 配置触发器 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 这里不可以直接在属性jobDetail中引用taskJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过MethodInvokingJobDetailFactoryBean来转一下 -->
       <property name="jobDetail" ref="methodInvokingJobDetail" />
       <!-- 每1个小时执行一次 -->
       <property name="cronExpression" value="0 0/60 * * * ? *" />
    </bean>
    
    <!-- 门诊订单定时任务 -->
    <bean id="clinicOrderJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="doctorClinicService" />
       <property name="targetMethod" value="orderClinicPromptTask" />
       <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
       <property name="concurrent" value="false" />
    </bean>
    <!-- 配置触发器 clinic-->
    <bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="clinicOrderJobDetail" />
       <!-- 每1个小时执行一次 -->
       <property name="cronExpression" value="0 0/60 * * * ? *" />
    </bean>
    
    <!-- 计免儿保 -->
	<bean id="organBusiness" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject" ref="organOrderService" />
       <property name="targetMethod" value="organBussinessPromptTask" />
       <property name="concurrent" value="false" />
    </bean>
    <bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="organBusiness" />
       <!-- 每1个小时执行一次 -->
       <property name="cronExpression" value="0 0/60 * * * ? *" />
    </bean>
     <!-- 计免儿保 end-->
     
   <bean id="schedulerFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
   	<!--必须，QuartzScheduler 延时启动，应用启动后 QuartzScheduler 再启动-->    
        <property name="startupDelay" value="30"/>         
       <!-- 添加触发器 -->
       <property name="triggers">
           <list>
              <ref local="cronTrigger" /> 
			  <ref local="cronTrigger1" />
			  <ref local="cronTrigger2" />
           </list>
       </property>
    </bean>
    
</beans>